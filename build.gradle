plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'co.edu.uniquindio'
version = '0.0.1-SNAPSHOT'
description = 'Spring Boot project for hosting management'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// para encriptar la contraseña

	// de los mappers
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//Para los emails
	implementation 'org.simplejavamail:simple-java-mail:8.12.6'
	implementation 'org.simplejavamail:batch-module:8.12.6'
	// https://mvnrepository.com/artifact/org.simplejavamail/simple-java-mail
	implementation("org.simplejavamail:simple-java-mail:8.12.6")
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	//para el servicio donde se alojarán las fotos
	implementation 'com.cloudinary:cloudinary-http5:2.3.2'

	// seguridad y JWT
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'

    // Para los web Sockets
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

}


tasks.named('test') {
	useJUnitPlatform()
}
